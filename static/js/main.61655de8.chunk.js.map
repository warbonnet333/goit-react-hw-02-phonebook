{"version":3,"sources":["transitions/slide.module.css","components/Form/Form.module.css","components/Contact/Contact.module.css","components/Alert/Alert.module.css","components/Filter/Filter.module.css","components/List/List.module.css","transitions/pop.module.css","transitions/slideFromTop.module.css","components/App.module.css","components/Alert/Alert.jsx","components/redux/alertActions.js","components/Alert/AlerContainer.jsx","components/Filter/Filter.jsx","components/redux/filterActions.js","components/Filter/FilterContainer.jsx","components/service/checkedName.js","components/Form/Form.jsx","components/redux/listActions.js","components/Form/FormContainer.jsx","components/Contact/Contact.jsx","components/service/changeFilter.js","components/List/List.jsx","components/List/ListContainer.jsx","components/App.jsx","components/redux/listReduser.js","components/redux/alertReduser.js","components/redux/filterReduser.js","components/redux/store.js","index.js"],"names":["module","exports","Alert","onCloseAlert","this","props","setTimeout","existedName","className","style","alert","type","onClick","Component","switchAlert","createAction","closeAlert","propTypes","PropTypes","string","func","isRequired","connect","state","dispatch","alertActions","Filter","value","changeFilter","container","htmlFor","name","onChange","fillFilter","filter","event","filterActions","target","checkedName","contactList","newName","find","toLowerCase","uuidv4","require","initialState","number","Form","isShown","hendleChange","e","setState","hendleSubmit","preventDefault","contacts","addContact","id","styles","CSSTransition","in","timeout","classNames","slideTransition","title","onSubmit","form","required","deleteContact","addFromLocalStorage","arrayOf","shape","listActions","Contact","onDelete","list__item","icon","changeFinalList","prevArray","item","includes","List","items","finalList","TransitionGroup","component","list","map","key","App","persistedContacts","localStorage","getItem","fetchFromLocal","JSON","parse","prevProps","prevState","setItem","stringify","isFilterShown","length","slideTopTransition","unmountOnExit","popTransition","showAlert","array","createReducer","action","payload","store","configureStore","reducer","listReduser","alertReduser","filterReduser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61655de8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2XaVl\",\"enterActive\":\"slide_enterActive__1NbRM\",\"exit\":\"slide_exit__220GC\",\"exitActive\":\"slide_exitActive__1l4rz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__w6dPH\",\"container\":\"Form_container__78VT7\",\"form\":\"Form_form__Ni6is\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"Contact_list__item__1v3Y7\",\"icon\":\"Contact_icon__2r8Mu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__16pH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__17YgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__g3MrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2zaA6\",\"enterActive\":\"pop_enterActive__3D7DL\",\"exit\":\"pop_exit__36pAH\",\"exitActive\":\"pop_exitActive__1h_tC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideFromTop_enter__3Iwux\",\"enterActive\":\"slideFromTop_enterActive__151E_\",\"exit\":\"slideFromTop_exit__BrqFT\",\"exitActive\":\"slideFromTop_exitActive__1zOh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2fiFZ\"};","import React, { Component } from \"react\"\r\nimport style from \"./Alert.module.css\"\r\n\r\nexport default class Alert extends Component {\r\n\r\n  componentDidMount() {\r\n    const { onCloseAlert } = this.props\r\n    setTimeout(onCloseAlert, 3000)\r\n  }\r\n\r\n  render() {\r\n    const { existedName, onCloseAlert } = this.props\r\n    return (\r\n      <div className={style.alert}>\r\n        <p>\r\n          {`${existedName} is already in contacts`}\r\n        </p>\r\n        <button type=\"button\" onClick={onCloseAlert}>OK</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const switchAlert = createAction(\"alertReduser/switchAlert\");\r\nexport const closeAlert = createAction(\"alertReduser/closeAlert\");\r\n","import Alert from \"./Alert\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as alertActions from \"../redux/alertActions\";\r\n\r\nAlert.propTypes = {\r\n  existedName: PropTypes.string,\r\n  onCloseAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mSTP = (state) => ({\r\n  existedName: state.alert.existedName,\r\n});\r\n\r\nconst mDTP = (dispatch) => ({\r\n  onCloseAlert: () => dispatch(alertActions.closeAlert()),\r\n});\r\n\r\nexport default connect(mSTP, mDTP)(Alert);\r\n","import React from \"react\";\r\nimport style from \"./Filter.module.css\"\r\n\r\nconst Filter = ({ value, changeFilter }) =>\r\n  <div className={style.container}>\r\n    <label htmlFor=\"find\">Find contact by name</label>\r\n    <input type=\"text\" name=\"find\" value={value} onChange={changeFilter} />\r\n  </div>\r\n\r\nexport default Filter","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fillFilter = createAction(\"filterReduser/fillFilter\");\r\n","import Filter from \"./Filter\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as filterActions from \"../redux/filterActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mSTP = (state) => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mDTP = (dispatch) => ({\r\n  changeFilter: (event) =>\r\n    dispatch(filterActions.fillFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mSTP, mDTP)(Filter);\r\n","const checkedName = (contactList, newName) =>\r\n  contactList.find(({ name }) => name.toLowerCase() === newName.toLowerCase());\r\n\r\nexport default checkedName;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Form.module.css\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport slideTransition from '../../transitions/slide.module.css'\r\nimport checkedName from \"../service/checkedName\"\r\n\r\nconst uuidv4 = require(\"uuid/v4\");\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n}\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isShown: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isShown: true })\r\n  }\r\n\r\n  hendleChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  hendleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { name, number } = this.state\r\n    const { contacts, addContact } = this.props\r\n    if (!checkedName(contacts, name)) {\r\n      const contactToAdd = {\r\n        name,\r\n        number,\r\n        id: uuidv4()\r\n      }\r\n      addContact(contactToAdd)\r\n    } else {\r\n      this.props.switchAlert(name)\r\n    }\r\n\r\n\r\n    this.setState(state => ({ ...state, ...initialState }))\r\n  }\r\n\r\n  render() {\r\n    const { name, number, isShown } = this.state\r\n    return (\r\n      <div className={styles.container}>\r\n        <CSSTransition in={isShown} timeout={500} classNames={slideTransition}>\r\n          <h2 className={styles.title}>Phonebook</h2>\r\n        </CSSTransition>\r\n        <form onSubmit={this.hendleSubmit} className={styles.form} >\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" name=\"name\" value={name} onChange={this.hendleChange} required />\r\n          <label htmlFor=\"number\">Number</label>\r\n          <input type=\"number\" name=\"number\" value={number} onChange={this.hendleChange} required />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"listReduser/addContact\");\r\nexport const deleteContact = createAction(\"listReduser/deleteContact\");\r\nexport const addFromLocalStorage = createAction(\r\n  \"listReduser/addFromLocalStorage\"\r\n);\r\n","import Form from \"./Form\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as listActions from \"../redux/listActions\";\r\nimport * as alertActions from \"../redux/alertActions\";\r\n\r\nconst mSTP = (state) => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mDTP = (dispatch) => ({\r\n  addContact: (name, number) => dispatch(listActions.addContact(name, number)),\r\n  switchAlert: (name) => dispatch(alertActions.switchAlert(name)),\r\n});\r\n\r\nForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  addContact: PropTypes.func.isRequired,\r\n  switchAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mSTP, mDTP)(Form);\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport style from './Contact.module.css'\r\nimport { TiDelete } from \"react-icons/all\"\r\n\r\nconst Contact = ({ name, number, onDelete }) =>\r\n  <li className={style.list__item}>\r\n    <p>{name}</p>\r\n    <p>{number}</p>\r\n    <button type=\"button\" onClick={onDelete}><TiDelete className={style.icon} /></button>\r\n  </li>\r\n\r\n\r\nContact.propTypes = {\r\n  onDelete: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string\r\n}\r\n\r\nexport default Contact","const changeFinalList = (prevArray, filter) =>\r\n  prevArray.filter(item =>\r\n    item.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\nexport default changeFinalList;\r\n\r\n\r\n","import React from \"react\";\r\nimport styles from './List.module.css'\r\nimport Contact from \"../Contact/Contact\"\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\r\nimport slideTransition from '../../transitions/slide.module.css'\r\nimport changeFinalList from \"../service/changeFilter\"\r\n\r\n\r\nconst List = ({ items, deleteContact, filter }) => {\r\n  const finalList = changeFinalList(items, filter)\r\n\r\n  return <TransitionGroup component=\"ul\" className={styles.list} >\r\n    {\r\n      finalList.map(({ id, name, number }) => (\r\n        <CSSTransition key={id} timeout={250} classNames={slideTransition}>\r\n          <Contact name={name} number={number} onDelete={() => deleteContact(id)} />\r\n        </CSSTransition>\r\n      ))\r\n    }\r\n  </TransitionGroup >\r\n}\r\n\r\nexport default List","import List from \"./List\"\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\"\r\nimport * as listActions from \"../redux/listActions\"\r\n\r\nList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string,\r\n  })\r\n  ).isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nconst mstp = state => ({\r\n  items: state.contacts,\r\n  filter: state.filter\r\n})\r\n\r\nconst mDTP = dispatch => ({\r\n  deleteContact: id => dispatch(listActions.deleteContact(id))\r\n})\r\n\r\nexport default connect(mstp, mDTP)(List)","import React, { Component } from \"react\";\r\nimport Alert from \"./Alert/AlerContainer\"\r\nimport Filter from \"./Filter/FilterContainer\"\r\nimport Form from \"./Form/FormContainer\"\r\nimport List from \"./List/ListContainer\"\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport popTransition from '../transitions/pop.module.css';\r\nimport slideTopTransition from '../transitions/slideFromTop.module.css'\r\nimport { connect } from \"react-redux\"\r\nimport * as listActions from \"./redux/listActions\"\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./App.module.css\"\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem(\"contacts\")\r\n    if (persistedContacts) {\r\n      this.props.fetchFromLocal(JSON.parse(persistedContacts))\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.contacts !== this.props.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts, isShown, filter } = this.props\r\n    const isFilterShown = !!(contacts.length > 2 || filter)\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <CSSTransition in={isShown} timeout={250} classNames={slideTopTransition} unmountOnExit>\r\n          <Alert />\r\n        </CSSTransition>\r\n        <Form />\r\n        <CSSTransition in={isFilterShown} timeout={250} classNames={popTransition} unmountOnExit>\r\n          <Filter />\r\n        </CSSTransition>\r\n        <List />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mSTP = state => ({\r\n  contacts: state.contacts,\r\n  isShown: state.alert.showAlert,\r\n  filter: state.filter\r\n})\r\n\r\nconst mDTP = dispatch => ({\r\n  fetchFromLocal: array => dispatch(listActions.addFromLocalStorage(array))\r\n})\r\n\r\nApp.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string,\r\n  })\r\n  ).isRequired,\r\n  isShown: PropTypes.bool.isRequired,\r\n  filter: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default connect(mSTP, mDTP)(App)\r\n\r\n\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, addFromLocalStorage } from \"./listActions\";\r\n\r\nexport default createReducer([], {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n  [addFromLocalStorage]: (state, action) => [...state, ...action.payload],\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { switchAlert, closeAlert } from \"./alertActions\";\r\n\r\nexport default createReducer(\r\n  { showAlert: false },\r\n  {\r\n    [switchAlert]: (state, action) => ({\r\n      showAlert: true,\r\n      existedName: action.payload,\r\n    }),\r\n    [closeAlert]: (state, action) => ({ showAlert: false }),\r\n  }\r\n);\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { fillFilter } from \"./filterActions\";\r\n\r\nexport default createReducer(\"\", {\r\n  [fillFilter]: (state, action) => action.payload,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport listReduser from \"./listReduser\";\r\nimport alertReduser from \"./alertReduser\";\r\nimport filterReduser from \"./filterReduser\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: listReduser,\r\n    alert: alertReduser,\r\n    filter: filterReduser,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport store from \"./components/redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}